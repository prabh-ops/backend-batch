<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          animation: {
            'fade-in': 'fadeIn 0.5s ease-out',
            'slide-up': 'slideUp 0.5s ease-out',
            'pulse-slow': 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',
          },
          keyframes: {
            fadeIn: {
              '0%': { opacity: '0' },
              '100%': { opacity: '1' },
            },
            slideUp: {
              '0%': { transform: 'translateY(20px)', opacity: '0' },
              '100%': { transform: 'translateY(0)', opacity: '1' },
            }
          }
        }
      }
    }
  </script>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
    
    body {
      font-family: 'Inter', sans-serif;
    }
    
    .form-input {
      transition: all 0.3s ease;
    }
    
    .form-input:focus {
      transform: translateY(-1px);
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .bg-mesh {
      background-image: radial-gradient(at 40% 20%, hsla(228,100%,74%,1) 0px, transparent 50%),
                        radial-gradient(at 80% 0%, hsla(189,100%,56%,1) 0px, transparent 50%),
                        radial-gradient(at 0% 50%, hsla(355,100%,93%,1) 0px, transparent 50%),
                        radial-gradient(at 80% 50%, hsla(340,100%,76%,1) 0px, transparent 50%),
                        radial-gradient(at 0% 100%, hsla(22,100%,77%,1) 0px, transparent 50%),
                        radial-gradient(at 80% 100%, hsla(242,100%,70%,1) 0px, transparent 50%),
                        radial-gradient(at 0% 0%, hsla(343,100%,76%,1) 0px, transparent 50%);
    }
  </style>
</head>
<body class="min-h-screen bg-mesh flex items-center justify-center p-4">
  <div class="w-full max-w-md animate-fade-in">
    <div class="bg-white/80 backdrop-blur-xl rounded-2xl shadow-2xl p-8 animate-slide-up">
      <div class="text-center mb-8">
        <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <div class="w-8 h-8 text-blue-500">üîë</div>
        </div>
        <h2 class="text-3xl font-bold text-gray-800 mb-2">Forgot Password?</h2>
        <p class="text-gray-600">No worries! Enter your email and we'll send you reset instructions.</p>
      </div>

      <form id="forgotForm" class="space-y-6">
        <div>
          <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
            Email Address
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="form-input w-full px-4 py-3 rounded-xl border border-gray-200 focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50 transition-all duration-300"
            placeholder="your@email.com"
          />
          <p id="emailError" class="mt-2 text-sm text-red-600 hidden"></p>
        </div>

        <button
          type="submit"
          class="w-full bg-gradient-to-r from-blue-500 to-indigo-600 text-white py-3 rounded-xl hover:opacity-90 transition duration-300 transform hover:-translate-y-0.5 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 font-medium"
        >
          <span id="buttonText" class="flex items-center justify-center">
            <span>Send Reset Instructions</span>
          </span>
          <span id="loadingSpinner" class="hidden flex items-center justify-center">
            <span class="w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin"></span>
          </span>
        </button>
      </form>

      <div class="mt-8 text-center">
        <a href="/" class="inline-flex items-center text-sm font-medium text-blue-600 hover:text-blue-500 transition-colors duration-300">
          <span class="mr-2">‚Üê</span>
          Back to Login
        </a>
      </div>

      <!-- Success Message -->
      <div id="successMessage" class="hidden mt-6 p-4 rounded-lg bg-green-50 text-green-700 text-center animate-fade-in">
        <p class="font-medium">Check your email</p>
        <p class="text-sm mt-1">We've sent you instructions to reset your password.</p>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('forgotForm');
      const emailInput = document.getElementById('email');
      const emailError = document.getElementById('emailError');
      const buttonText = document.getElementById('buttonText');
      const loadingSpinner = document.getElementById('loadingSpinner');
      const successMessage = document.getElementById('successMessage');

      const validateEmail = (email) => {
        const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        return re.test(email);
      };

      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        // Reset previous error state
        emailError.classList.add('hidden');
        emailInput.classList.remove('border-red-500');
        
        const email = emailInput.value.trim();
        
        if (!validateEmail(email)) {
          emailError.textContent = 'Please enter a valid email address';
          emailError.classList.remove('hidden');
          emailInput.classList.add('border-red-500');
          return;
        }

        // Show loading state
        buttonText.classList.add('hidden');
        loadingSpinner.classList.remove('hidden');
        form.querySelector('button').disabled = true;

        try {
          // Simulate API call
          const response = await axios.post(`http://localhost:5000/api/auth//forgot-password`, { email });
          if (response.status === 200) {
            console.log('Email sent successfully');
          } else {
            throw new Error('Failed to send email');
          }
          
          // Show success message
          form.classList.add('hidden');
          successMessage.classList.remove('hidden');
        } catch (error) {
          emailError.textContent = 'Something went wrong. Please try again.';
          console.log(error.message)
          emailError.classList.remove('hidden');
        } finally {
          buttonText.classList.remove('hidden');
          loadingSpinner.classList.add('hidden');
          form.querySelector('button').disabled = false;
        }
      });

      // Real-time email validation
      emailInput.addEventListener('input', () => {
        if (emailInput.value.trim() === '') {
          emailError.classList.add('hidden');
          emailInput.classList.remove('border-red-500');
        }
      });
    });
  </script>
</body>
</html>